{"remainingRequest":"C:\\Source Code\\todolist-Basic\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Source Code\\todolist-Basic\\src\\components\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Source Code\\todolist-Basic\\src\\components\\Home.vue","mtime":1652862064826},{"path":"C:\\Source Code\\todolist-Basic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650267187383},{"path":"C:\\Source Code\\todolist-Basic\\node_modules\\babel-loader\\lib\\index.js","mtime":1650267187678},{"path":"C:\\Source Code\\todolist-Basic\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650267187383},{"path":"C:\\Source Code\\todolist-Basic\\node_modules\\vue-loader\\lib\\index.js","mtime":1650267188097}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport List from './List.vue'\r\nimport ListAdd from './ListAdd.vue'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      todoList: []\r\n    }\r\n  },\r\n  computed:{\r\n    countDone(){\r\n      let count =  0;\r\n      this.todoList.forEach(list => {\r\n        if(list.status === 'done') count++\r\n      })\r\n      return count\r\n    }\r\n  },\r\n  methods: {\r\n    listAdd(memo) {\r\n      console.log(\"받았어!\")\r\n      this.todoList.push({ memo: memo, status: \"created\"})\r\n    },\r\n    statusControl(index, status){\r\n      this.todoList[index].status = status\r\n    },\r\n    listDelete(index, status){\r\n      this.todoList.splice(index, 1)\r\n    },\r\n    listEdit(memo,index){\r\n      this.todoList[index].memo = memo\r\n    }\r\n  },\r\n  components:{\r\n    List,\r\n    ListAdd,\r\n  },\r\n}\r\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n<v-container>\r\n  <v-layout row wrap>\r\n    <v-flex xs12 text-xs-center>\r\n      <h1> 투두 리스트</h1>\r\n      <p>전체 할일: {{ todoList.length }} / 완료된 할일: {{ countDone }} / 남은 할일: {{ todoList.length-countDone }}</p>\r\n    </v-flex>\r\n    <v-flex xs6 pa-2>\r\n      <List :todoList=\"todoList\" @statusControl=\"statusControl\" @listDelete=\"listDelete\" />\r\n    </v-flex>\r\n    <v-flex xs6 pa-2>\r\n      <ListAdd @listAdd=\"listAdd\" @listEdit=\"listEdit\" />\r\n    </v-flex>\r\n  </v-layout>\r\n</v-container>\r\n</template>\r\n\r\n<script>\r\nimport List from './List.vue'\r\nimport ListAdd from './ListAdd.vue'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      todoList: []\r\n    }\r\n  },\r\n  computed:{\r\n    countDone(){\r\n      let count =  0;\r\n      this.todoList.forEach(list => {\r\n        if(list.status === 'done') count++\r\n      })\r\n      return count\r\n    }\r\n  },\r\n  methods: {\r\n    listAdd(memo) {\r\n      console.log(\"받았어!\")\r\n      this.todoList.push({ memo: memo, status: \"created\"})\r\n    },\r\n    statusControl(index, status){\r\n      this.todoList[index].status = status\r\n    },\r\n    listDelete(index, status){\r\n      this.todoList.splice(index, 1)\r\n    },\r\n    listEdit(memo,index){\r\n      this.todoList[index].memo = memo\r\n    }\r\n  },\r\n  components:{\r\n    List,\r\n    ListAdd,\r\n  },\r\n}\r\n</script>"]}]}